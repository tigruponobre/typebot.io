x-typebot-common: &typebot-common
  restart: always
  depends_on:
    typebot-redis:
      condition: service_healthy
    typebot-db:
      condition: service_healthy
    minio:
      condition: service_started
  networks:
    - typebot-network
  env_file: .env
  environment:
    REDIS_URL: redis://typebot-redis:6379

services:
  typebot-db:
    image: postgres:16
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=typebot
      - POSTGRES_PASSWORD=typebot
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - typebot-network

  typebot-redis:
    image: redis:alpine
    restart: always
    command: --save 60 1 --loglevel warning
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis-data:/data
    networks:
      - typebot-network

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
      - MINIO_BROWSER_REDIRECT_URL=http://localhost:9001
    volumes:
      - s3-data:/data
    networks:
      - typebot-network

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    networks:
      - typebot-network
    entrypoint: >
      /bin/sh -c " sleep 10; /usr/bin/mc config host add minio http://minio:9000 minio minio123; /usr/bin/mc mb minio/typebot; /usr/bin/mc anonymous set public minio/typebot/public; exit 0; "

  typebot-builder:
    <<: *typebot-common
    image: baptistearno/typebot-builder:latest
    ports:
      - "8080:3000"

  typebot-viewer:
    <<: *typebot-common
    image: baptistearno/typebot-viewer:latest
    ports:
      - "8081:3000"

networks:
  typebot-network:
    driver: bridge

volumes:
  db-data:
  redis-data:
  s3-data:
